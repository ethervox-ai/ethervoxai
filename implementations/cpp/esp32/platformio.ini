[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino, espidf

# Serial monitoring
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

# Build optimization flags
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DETHERVOX_ESP32
    -DTENSORFLOW_LITE_MICRO
    -DCONFIG_ETHERVOX_VERSION="1.0.0"
    -DCONFIG_ARDUINO_LOOP_STACK_SIZE=8192
    -DCONFIG_ETHERVOX_MAX_MODEL_SIZE=524288    ; 512KB max model
    -DCONFIG_ETHERVOX_TENSOR_ARENA_SIZE=8192   ; 8KB tensor arena
    -DCONFIG_ETHERVOX_AUDIO_BUFFER_SIZE=1024   ; 1KB audio buffer
    -DCONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM=10
    -DCONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM=32
    -DCONFIG_ESP32_WIFI_STATIC_TX_BUFFER_NUM=0
    -DCONFIG_ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM=32
    -Os                    ; Optimize for size
    -ffunction-sections    ; Dead code elimination
    -fdata-sections
    -Wl,--gc-sectionsw

# ESP-IDF specific configuration
board_build.esp-idf.sdkconfig_path = sdkconfig.defaults
board_build.arduino.loop_task_stack_size = 8192
board_build.arduino.enable_cxx_exceptions = yes

# Libraries for AI and audio processing
lib_deps = 
    bblanchon/ArduinoJson@^6.21.3
    knolleary/PubSubClient@^2.8
    https://github.com/earlephilhower/ESP8266Audio.git
    # TensorFlow Lite Micro will be added when available for PlatformIO
    # For now, we'll include it manually in lib/ folder

# Upload configuration
upload_speed = 921600
upload_port = COM3    ; Adjust for your system (Windows: COM3, Linux: /dev/ttyUSB0, macOS: /dev/cu.*)

# Debugging configuration
debug_tool = esp-prog
debug_init_break = tbreak setup

# Custom partition table for larger app size
board_build.partitions = partitions_ethervox.csv

# Enable PSRAM for larger models (if available on your board)
board_build.arduino.memory_type = qio_opi
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L

# Production environment (optimized for release)
[env:esp32_production]
extends = env:esp32
build_type = release
build_flags = 
    ${env:esp32.build_flags}
    -DPRODUCTION_BUILD
    -DNDEBUG
    -DCONFIG_LOG_DEFAULT_LEVEL=2  ; Only warnings and errors

# Development environment (with debugging)
[env:esp32_debug]
extends = env:esp32
build_type = debug
build_flags = 
    ${env:esp32.build_flags}
    -DDEBUG_BUILD
    -DCONFIG_LOG_DEFAULT_LEVEL=5  ; Verbose logging
    -g                            ; Debug symbols

# Low-power environment (for battery operation)
[env:esp32_lowpower]
extends = env:esp32
build_flags = 
    ${env:esp32.build_flags}
    -DCONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ=80
    -DLOW_POWER_MODE
    -DCONFIG_ETHERVOX_MAX_MODEL_SIZE=262144  ; 256KB max model

# ESP32-S3 variant (with more memory and AI acceleration)
[env:esp32s3]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino, espidf
extends = env:esp32
build_flags = 
    ${env:esp32.build_flags}
    -DETHERVOX_ESP32S3
    -DCONFIG_ETHERVOX_MAX_MODEL_SIZE=1048576  ; 1MB max model
    -DCONFIG_ETHERVOX_TENSOR_ARENA_SIZE=16384 ; 16KB tensor arena

# ESP32-C3 variant (RISC-V, smaller footprint)
[env:esp32c3]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino, espidf
build_flags = 
    -DETHERVOX_ESP32C3
    -DCONFIG_ETHERVOX_MAX_MODEL_SIZE=131072   ; 128KB max model
    -DCONFIG_ETHERVOX_TENSOR_ARENA_SIZE=4096  ; 4KB tensor arena
    -Os

lib_deps = 
    bblanchon/ArduinoJson@^6.21.3
